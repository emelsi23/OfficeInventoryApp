// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OfficeInventory.Infrastructure.Data;

#nullable disable

namespace OfficeInventory.Infrastructure.Migrations
{
    [DbContext(typeof(InventaryDbContext))]
    [Migration("20250510011357_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OfficeInventory.Domain.Entities.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipmentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentTypeId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("OfficeInventory.Domain.Entities.EquipmentMaintenance", b =>
                {
                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("MaintenanceTaskId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId", "MaintenanceTaskId");

                    b.HasIndex("MaintenanceTaskId");

                    b.ToTable("EquipmentMaintenances");
                });

            modelBuilder.Entity("OfficeInventory.Domain.Entities.EquipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EquipmentTypes");
                });

            modelBuilder.Entity("OfficeInventory.Domain.Entities.MaintenanceTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaintenanceTasks");
                });

            modelBuilder.Entity("OfficeInventory.Domain.Entities.Equipment", b =>
                {
                    b.HasOne("OfficeInventory.Domain.Entities.EquipmentType", "EquipmentType")
                        .WithMany("Equipments")
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentType");
                });

            modelBuilder.Entity("OfficeInventory.Domain.Entities.EquipmentMaintenance", b =>
                {
                    b.HasOne("OfficeInventory.Domain.Entities.Equipment", "Equipment")
                        .WithMany("EquipmentMaintenances")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OfficeInventory.Domain.Entities.MaintenanceTask", "MaintenanceTask")
                        .WithMany("EquipmentMaintenances")
                        .HasForeignKey("MaintenanceTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("MaintenanceTask");
                });

            modelBuilder.Entity("OfficeInventory.Domain.Entities.Equipment", b =>
                {
                    b.Navigation("EquipmentMaintenances");
                });

            modelBuilder.Entity("OfficeInventory.Domain.Entities.EquipmentType", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("OfficeInventory.Domain.Entities.MaintenanceTask", b =>
                {
                    b.Navigation("EquipmentMaintenances");
                });
#pragma warning restore 612, 618
        }
    }
}
